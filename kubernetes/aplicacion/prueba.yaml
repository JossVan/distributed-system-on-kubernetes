# Deployment y service del backend
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: proyect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - image: cifgt3/grupo16-backend
        imagePullPolicy: Always
        name: backend
        ports:
        - containerPort: 8080
--- 
# servicio del backend, tipo clusterip
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: proyect
  labels:
    app: backend
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: backend
---
# Frontend deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: proyect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - image: cifgt3/grupo16-frontend
        imagePullPolicy: Always
        name: frontend
        ports:
        - containerPort: 80
---
# service del frontend
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: proyect
  labels:
    app: frontend
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: frontend
---
# regla de ingress controller
apiVersion: networking.k8s.io/v1 
kind: Ingress 
metadata: 
  name: frontend-ingress
  annotations: 
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.org/websocket-services: "ws-svc"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE, PATCH 
    nginx.ingress.kubernetes.io/websocket-services: "backend"
    kubernetes.io/ingress.class: nginx 
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
  namespace: proyect
spec: 
  rules: 
  - host: frontend.grupo16-proyecto2-vacas-2021.tk
    http: 
      paths: 
        - path: /socket.io/.*
          pathType: Prefix 
          backend:
            service:
              name: backend
              port:
                number: 8080
        - path: /?(.*)
          pathType: Prefix 
          backend: 
            service: 
              name: frontend
              port: 
                number: 80